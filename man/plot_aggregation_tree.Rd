% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{plot_aggregation_tree}
\alias{plot_aggregation_tree}
\title{Tree-Plot for Aggregation Trees}
\usage{
plot_aggregation_tree(aggregation_tree, palette = NULL, sequence = FALSE, ...)
}
\arguments{
\item{aggregation_tree}{The output of \code{\link{aggregation_tree}}.}

\item{palette}{Palette to color the nodes.}

\item{sequence}{Logical. If \code{FALSE} (default value), the entire tree is displayed. Otherwise, an animation showing the whole sequence of subtrees is provided.}

\item{...}{Additional arguments for \code{\link[rpart.plot]{prp}}. See the details section for suggested parameters.}
}
\value{
None. It plots an aggregation tree.
}
\description{
Plots an aggregation tree via the tree representation.
}
\details{
\code{palette} helps visualizing the information from the \code{aggregation_tree}. As suggested in Di Francesco (2022),
using diverging colors (e.g., red and blue) to indicate effects stronger and lighter than the average treatment effect
gives an immediate indication of the most and least impacted groups. \cr\cr
If palette is not passed, \code{plot_aggregation_tree} asks the user to select one. See the example to understand how
to avoid being asked a palette each time. \cr\cr
Among the most useful parameters to be passed in \code{...} there is:
\describe{
  \item{\code{main}}{String for the title of the plot.}
  \item{\code{cex.main}}{Size of the title.}
  \item{\code{split.cex}}{Size of splitting labels.}
  }
}
\examples{
## Loading data (using random subsample provided by Matias Cattaneo).
dta <- haven::read_dta("http://www.stata-press.com/data/r13/cattaneo2.dta")

Y <- as.matrix(dta[, "bweight"])
D <- as.matrix(dta[, "mbsmoke"])
X_names <- c("bweight", "mbsmoke", "deadkids", "monthslb", "lbweight")
X <- as.matrix(dta[, !(colnames(dta) \%in\% X_names)])

## Splitting sample.
set.seed(1986)
n <- dim(dta)[1]
est_idx <- sample(1:n, n / 2, replace = FALSE)

X_est <- X[est_idx, ]
Y_est <- Y[est_idx]
D_est <- D[est_idx]

X_agg <- X[-est_idx, ]
Y_agg <- Y[-est_idx]
D_agg <- D[-est_idx]

## Estimating CATEs using only estimation sample.
cates_forest <- grf::causal_forest(X = X_est, Y = Y_est, W = D_est)

## Growing tree using only aggregation sample.
cates <- predict(cates_forest, newdata = X_agg)$predictions
tree <- aggregation_tree(cates, X_agg, maxdepth = 3, cp = 0.01)

## Plotting.
plot_aggregation_tree(tree)

## It can be annoying selecting a palette each time.
palette <- colorspace::choose_palette()
plot_aggregation_tree(tree, palette)
plot_aggregation_tree(tree, palette)

## Displaying the whole sequence.
plot_aggregation_tree(tree, palette, sequence = TRUE)

}
