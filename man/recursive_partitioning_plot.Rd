% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{recursive_partitioning_plot}
\alias{recursive_partitioning_plot}
\title{Recursive Partitioning Plot for Aggregation Trees}
\usage{
recursive_partitioning_plot(
  aggregation_tree,
  cates,
  X,
  low = "yellow",
  high = "red"
)
}
\arguments{
\item{aggregation_tree}{The output of \code{\link{aggregation_tree}}. The tree must have been built using two covariates only.}

\item{cates}{CATEs vector.}

\item{X}{Covariate matrix (no intercept). The same used in \code{aggregation_tree}.}

\item{low}{String. Color to represent more negative \code{cates}.}

\item{high}{String. Color to represent more positive \code{cates}.}
}
\value{
The desired plot.
}
\description{
Plots the recursive partitioning of an aggregation tree for a two-dimensional covariate space.
}
\details{
\code{recursive_partitioning_plot} helps visualizing the recursive partitioning of \code{aggregation_tree} when two
covariates only are used to build the tree. \cr\cr
The plot is built as follows. First, a scatter plot of the two covariates is displayed. Each point is colored
according to the associated value of \code{cates}, so that it is immediate noticing where treatment effects
are stronger and lighter (colors can be specified by the user). Second, the axis-aligned splits of \code{aggregation_tree}
are overimposed, thereby showing the different groups.
}
\examples{
## Loading data (using random subsample provided by Matias Cattaneo).
dta <- haven::read_dta("http://www.stata-press.com/data/r13/cattaneo2.dta")

Y <- as.matrix(dta[, "bweight"])
D <- as.matrix(dta[, "mbsmoke"])
X_names <- c("bweight", "mbsmoke", "deadkids", "monthslb", "lbweight")
X <- as.matrix(dta[, !(colnames(dta) \%in\% X_names)])

## Splitting sample.
set.seed(1986)
n <- dim(dta)[1]
est_idx <- sample(1:n, n / 2, replace = FALSE)

X_est <- X[est_idx, ]
Y_est <- Y[est_idx]
D_est <- D[est_idx]

X_agg <- X[-est_idx, ]
Y_agg <- Y[-est_idx]
D_agg <- D[-est_idx]

## Estimating CATEs using only estimation sample.
cates_forest <- grf::causal_forest(X = X_est, Y = Y_est, W = D_est)

## Growing tree with two covariates only using only the aggregation sample.
X_subsample <- as.data.frame(X_agg[, c("mage", "nprenatal")])
cates <- predict(cates_forest, newdata = X_agg)$predictions

tree <- aggregation_tree(cates, X_subsample, maxdepth = 3, cp = 0.01)

## Plotting.
plot <- recursive_partitioning_plot(tree, cates, X_subsample)
plot

}
